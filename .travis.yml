language: cpp
os: linux

jobs:
  include:
    - os: linux
      dist: bionic
      compiler: clang
      group: travis_latest
      env: MATRIX_EVAL="CC=clang-8 && CXX=clang++-8"
      addons:
        apt:
            packages: ["clang-8", "libc++-8-dev", "libc++abi-8-dev", "ninja-build", "doxygen", "graphviz", "mscgen"]
            sources: ["llvm-toolchain-xenial-8"]

    - os: linux
      dist: bionic
      compiler: gcc
      group: travis_latest
      env: MATRIX_EVAL="CC=gcc-8 && CXX=g++-8 && GCOV=gcov-8"
      addons:
        apt:
            packages: ["g++-8", "libstdc++-8-dev", "ninja-build", "doxygen", "graphviz", "mscgen"]
            sources: { sourceline: "ppa:ubuntu-toolchain-r/test" }

before_install:
  - eval "${MATRIX_EVAL}"

install:
  - ${CXX} --version
  - cmake --version

before_script:
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir build-static && mkdir build-shared && mkdir build-coverage
  - cd build-static
  - cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF ..
  - cmake --build .
  - cd ../build-shared
  - cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON ..
  - cmake --build .
  - |
    if [[ "${CXX}" == "g++-8" ]]; then
        cd ../build-coverage
        cmake -DCMAKE_BUILD_TYPE=Debug -DBUILD_SHARED_LIBS=OFF -DGB_GENERATE_COVERAGE_INFO=ON -DGCOV_COMMAND=${GCOV} ..
        cmake --build .
    fi
  - cd ${TRAVIS_BUILD_DIR}

script:
  - cd build-static
  - ctest -C Release
  - cd ../build-shared
  - ctest -C Release
  - cd ../build-coverage
  - ctest -C Debug

after_script:
  - cd ${TRAVIS_BUILD_DIR}
  - cd build-static
  - cmake --build . --target doxygen-doc

after_success:
  - |
    if [[ "${CXX}" == "g++-8" ]]; then
        cd ${TRAVIS_BUILD_DIR}/build-coverage
        cmake --build . --target gbBase_TestCoverage
        bash <(curl -s https://codecov.io/bash)
    fi
